// gcd between 2 numbers
ll GCD(ll a , ll b){
    // you can get gcd of 2 numbers by prime factors of 2 numbers choose min power of each
    // prime factor
    // 2 2 3
    // 3 3 3
    // gcd = pow(2,0)*pow(3,1)
    if(b==0)return a;
    return GCD(b,a%b);
}

// lcm between 2 numbers
ll LCM(ll a, ll b){
    // you can get gcd of 2 numbers by prime factors of 2 numbers choose max power of each
    // prime factor
    // 2 2 3
    // 3 3 3
    // lcm = pow(2,2)*pow(3,3)
    return a/GCD(a,b)*b;
}

// power function

ll power(ll x,ll y)
{
    ll res=1;
    x=x%mod;
    if(x==0) return 0;
    while(y>0)
    {
        if(y&1) res=(res*x)%mod;
        y=y>>1;
        x=(x*x)%mod;
    }
    return res;
}

// mod operations 
// use when required in problem at every +-* operation replace it with mod fun like in power fun up

ll mod_sum(ll a , ll b){
    return (a%mod + b%mod) %mod;
}

ll mod_min(ll a , ll b){
    return (a%mod - b%mod + mod) %mod;
}

ll mod_mul(ll a , ll b){
    return (a%mod * b%mod) %mod;
}
